# Start with a Python base image
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Copy the local files into the container
COPY . /app

# Install any dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Set environment variables (optional, can be replaced by .env or docker-compose)
ENV POLLER_TYPE=${POLLER_TYPE}
ENV POLL_INTERVAL=${POLL_INTERVAL}
ENV REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
ENV MAX_RETRIES=${MAX_RETRIES}
ENV RETRY_DELAY=${RETRY_DELAY}
ENV LOG_LEVEL=${LOG_LEVEL}
ENV POLYGON_API_KEY=${POLYGON_API_KEY}
ENV FINNHUB_API_KEY=${FINNHUB_API_KEY}
ENV ALPHA_VANTAGE_API_KEY=${ALPHA_VANTAGE_API_KEY}
ENV YFINANCE_API_KEY=${YFINANCE_API_KEY}
ENV IEX_API_KEY=${IEX_API_KEY}
ENV QUANDL_API_KEY=${QUANDL_API_KEY}
ENV FINNHUB_FILL_RATE_LIMIT=${FINNHUB_FILL_RATE_LIMIT}
ENV POLYGON_FILL_RATE_LIMIT=${POLYGON_FILL_RATE_LIMIT}
ENV ALPHA_VANTAGE_FILL_RATE_LIMIT=${ALPHA_VANTAGE_FILL_RATE_LIMIT}
ENV YFINANCE_FILL_RATE_LIMIT=${YFINANCE_FILL_RATE_LIMIT}
ENV IEX_FILL_RATE_LIMIT=${IEX_FILL_RATE_LIMIT}
ENV QUANDL_FILL_RATE_LIMIT=${QUANDL_FILL_RATE_LIMIT}
ENV QUEUE_1=${QUEUE_1}
ENV QUEUE_2=${QUEUE_2}
ENV QUEUE_3=${QUEUE_3}
ENV QUEUE_4=${QUEUE_4}
ENV QUEUE_5=${QUEUE_5}
ENV QUEUE_6=${QUEUE_6}
ENV QUEUE_7=${QUEUE_7}
ENV QUEUE_8=${QUEUE_8}
ENV QUEUE_9=${QUEUE_9}
ENV QUEUE_10=${QUEUE_10}
ENV ENABLE_LOGGING=${ENABLE_LOGGING}
ENV LOG_LEVEL=${LOG_LEVEL}
ENV CLOUD_LOGGING_ENABLED=${CLOUD_LOGGING_ENABLED}
ENV CLOUD_LOGGING_ENDPOINT=${CLOUD_LOGGING_ENDPOINT}
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
ENV AWS_REGION=${AWS_REGION}
ENV ENABLE_RETRY=${ENABLE_RETRY}
ENV ENABLE_BACKFILL=${ENABLE_BACKFILL}
ENV POLL_TIMEOUT=${POLL_TIMEOUT}
ENV MAX_API_CALLS_PER_MIN=${MAX_API_CALLS_PER_MIN}
ENV QUEUE_TYPE=${QUEUE_TYPE}
ENV SQS_QUEUE_URL=${SQS_QUEUE_URL}

# Command to run the poller when the container starts
CMD ["python", "main.py"]   


helm create my-kubernetes-project