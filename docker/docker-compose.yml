services:
  # Poller Service
  poller:
    image: ghcr.io/<your-github-username>/<repository-name>:latest # Replace with your image path
    container_name: stock_poller
    environment:
      - POLLER_TYPE=${POLLER_TYPE}
      - POLL_INTERVAL=${POLL_INTERVAL}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT}
      - RABBITMQ_HOST=rabbitmq1
      - RABBITMQ_PORT=5672
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - REDIS_HOST=redis_sentinel
      - REDIS_PORT=26379
      - REDIS_SENTINEL_MASTER=mymaster
      - QUEUE_1=queue1
      - QUEUE_2=queue2
      - QUEUE_3=queue3
      - QUEUE_4=queue4
      - QUEUE_5=queue5
      - QUEUE_6=queue6
      - QUEUE_7=queue7
      - QUEUE_8=queue8
      - QUEUE_9=queue9
      - QUEUE_10=queue10
    depends_on:
      rabbitmq1:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: always
    networks:
      - app_network

  # Redis Master and Replica
  redis:
    image: bitnami/redis:latest
    container_name: redis_master
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      retries: 5
    networks:
      - app_network

  redis_replica:
    image: bitnami/redis:latest
    container_name: redis_replica
    environment:
      - REDIS_REPLICATION_MODE=replica
      - REDIS_MASTER_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      retries: 5
    networks:
      - app_network

  redis_sentinel:
    image: bitnami/redis-sentinel:latest
    container_name: redis_sentinel
    environment:
      - REDIS_SENTINEL_MASTER_NAME=mymaster
      - REDIS_SENTINEL_DOWN_AFTER_MILLISECONDS=5000
      - REDIS_SENTINEL_FAILOVER_TIMEOUT=10000
      - REDIS_SENTINEL_QUORUM=2
      - REDIS_MASTER_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - redis
    ports:
      - "26379:26379"
    networks:
      - app_network

  # RabbitMQ Cluster
  rabbitmq1:
    image: bitnami/rabbitmq:latest
    container_name: rabbitmq1
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq1
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
    networks:
      - app_network
    volumes:
      - rabbitmq1_data:/bitnami/rabbitmq

  rabbitmq2:
    image: bitnami/rabbitmq:latest
    container_name: rabbitmq2
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq2
      - RABBITMQ_CLUSTER_NODES=rabbit@rabbitmq1
    depends_on:
      - rabbitmq1
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
    networks:
      - app_network
    volumes:
      - rabbitmq2_data:/bitnami/rabbitmq

  rabbitmq3:
    image: bitnami/rabbitmq:latest
    container_name: rabbitmq3
    environment:
      - RABBITMQ_ERLANG_COOKIE=${RABBITMQ_ERLANG_COOKIE}
      - RABBITMQ_NODE_NAME=rabbit@rabbitmq3
      - RABBITMQ_CLUSTER_NODES=rabbit@rabbitmq1,rabbit@rabbitmq2
    depends_on:
      - rabbitmq1
      - rabbitmq2
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      retries: 5
    networks:
      - app_network
    volumes:
      - rabbitmq3_data:/bitnami/rabbitmq

volumes:
  rabbitmq1_data:
  rabbitmq2_data:
  rabbitmq3_data:

networks:
  app_network:
    driver: bridge
